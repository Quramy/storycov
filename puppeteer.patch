--- node_modules/storycrawler/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Coverage.js.old	2020-09-30 03:59:16.000000000 +0900
+++ node_modules/storycrawler/node_modules/puppeteer-core/lib/cjs/puppeteer/common/Coverage.js	2020-09-30 03:44:18.000000000 +0900
@@ -112,13 +112,15 @@ class JSCoverage {
         this._eventListeners = [];
         this._resetOnNavigation = false;
         this._reportAnonymousScripts = false;
+        this._includeRawScriptCoverage = false;
         this._client = client;
     }
     async start(options = {}) {
         assert_js_1.assert(!this._enabled, 'JSCoverage is already enabled');
-        const { resetOnNavigation = true, reportAnonymousScripts = false, } = options;
+        const { resetOnNavigation = true, reportAnonymousScripts = false, includeRawScriptCoverage = false, } = options;
         this._resetOnNavigation = resetOnNavigation;
         this._reportAnonymousScripts = reportAnonymousScripts;
+        this._includeRawScriptCoverage = includeRawScriptCoverage;
         this._enabled = true;
         this._scriptURLs.clear();
         this._scriptSources.clear();
@@ -129,7 +131,7 @@ class JSCoverage {
         await Promise.all([
             this._client.send('Profiler.enable'),
             this._client.send('Profiler.startPreciseCoverage', {
-                callCount: false,
+                callCount: this._includeRawScriptCoverage,
                 detailed: true,
             }),
             this._client.send('Debugger.enable'),
@@ -184,7 +186,12 @@ class JSCoverage {
             for (const func of entry.functions)
                 flattenRanges.push(...func.ranges);
             const ranges = convertToDisjointRanges(flattenRanges);
-            coverage.push({ url, ranges, text });
+            if (!this._includeRawScriptCoverage) {
+                coverage.push({ url, ranges, text });
+            }
+            else {
+                coverage.push({ url, ranges, text, rawScriptCoverage: entry });
+            }
         }
         return coverage;
     }
